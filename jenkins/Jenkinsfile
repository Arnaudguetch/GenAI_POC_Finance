pipeline {
    agent any

    environment {
        IMAGE_NAME = "genai_poc_finance"
    }

    stages {
        stage("Checkout develop-branch") {
            steps {
                script {
                    echo "Checkout de develop-branch..."
                    sh "git fetch origin develop-branch:develop-branch"
                    sh "git checkout develop-branch"
                }
            }
        }

        stage("Build Docker Image") {
            steps {
                script {
                    echo "Construction de l'image Docker..."
                    sh "docker build -t ${IMAGE_NAME} -f dockerfile/Dockerfile ."
                }
            }
        }

        stage("Run main.py") {
            steps {
                script {
                    echo "Exécution de main.py..."
                    sh "docker run --rm ${IMAGE_NAME} python3 /source/main.py"
                }
            }
        }

        stage("Checkout test-branch") {
            steps {
                script {
                    echo "Checkout de test-branch..."
                    sh "git fetch origin test-branch:test-branch"
                    sh "git checkout test-branch"
                }
            }
        }

        stage("Run Unit Tests") {
            steps {
                script {
                    echo "Lancement des tests unitaires..."
                    sh "docker run --rm -v \$(pwd)/tests:/source/tests ${IMAGE_NAME} pytest tests/test_main.py --maxfail=1 --disable-warnings -q"
                }
            }
        }

        stage("Deploy Streamlit App") {
            steps {
                script {
                    echo "Déploiement de app.py (Streamlit)..."
                    sh "docker run -d -p 8501:8501 ${IMAGE_NAME} streamlit run /source/app.py --server.port=8501 --server.address=0.0.0.0"
                }
            }
        }
    }

    post {
        always {
            echo "======== Pipeline terminé ========"
        }
        success {
            echo "Pipeline exécuté avec succès!"
        }
        failure {
            echo "Pipeline échoué!"
        }
    }
}
